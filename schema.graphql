### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AggregateUser {
  _count: UserCountAggregateOutputType
  _max: UserMaxAggregateOutputType
  _min: UserMinAggregateOutputType
}

"""user's token on successful login"""
type AuthPayload {
  """user's token"""
  token: String!
}

type BatchPayload {
  count: Int!
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
@see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt
"""
scalar BigInt

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input BoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

"""The `Byte` scalar type represents byte value as a Buffer"""
scalar Bytes

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime]
}

input DateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime]
}

"""An arbitrary-precision Decimal type"""
scalar Decimal

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  """Change Password"""
  changePassword(
    """new password"""
    newPassword: String!

    """origin password"""
    password: String!
  ): AuthPayload!

  """Sign In"""
  signIn(
    """user name"""
    name: String!

    """password"""
    password: String!
  ): AuthPayload!

  """user sign up"""
  signUp(data: SignUpInput!): User!
  updateProfile(data: UpdateProfileInput!): User!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime]
}

input NestedDateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String]
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String]
  startsWith: String
}

type Query {
  """get current user info"""
  me: User!
}

enum QueryMode {
  default
  insensitive
}

"""user sign up input type"""
input SignUpInput {
  name: String!
  nickName: String
  password: String!
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String]
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringWithAggregatesFilter
  notIn: [String]
  startsWith: String
}

enum TransactionIsolationLevel {
  ReadCommitted
  ReadUncommitted
  RepeatableRead
  Serializable
}

"""update profile input type"""
input UpdateProfileInput {
  nickName: String
}

"""User Account"""
type User {
  createdAt: DateTime!
  disabled: Boolean!
  id: String!
  name: String!
  nickName: String!
  updatedAt: DateTime!
}

type UserCountAggregateOutputType {
  _all: Int!
  createdAt: Int!
  disabled: Int!
  id: Int!
  name: Int!
  nickName: Int!
  password: Int!
  updatedAt: Int!
}

input UserCountOrderByAggregateInput {
  createdAt: SortOrder
  disabled: SortOrder
  id: SortOrder
  name: SortOrder
  nickName: SortOrder
  password: SortOrder
  updatedAt: SortOrder
}

input UserCreateInput {
  createdAt: DateTime
  disabled: Boolean
  id: String
  name: String!
  nickName: String!
  password: String!
  updatedAt: DateTime
}

input UserCreateManyInput {
  createdAt: DateTime
  disabled: Boolean
  id: String
  name: String!
  nickName: String!
  password: String!
  updatedAt: DateTime
}

type UserMaxAggregateOutputType {
  createdAt: DateTime
  disabled: Boolean
  id: String
  name: String
  nickName: String
  password: String
  updatedAt: DateTime
}

input UserMaxOrderByAggregateInput {
  createdAt: SortOrder
  disabled: SortOrder
  id: SortOrder
  name: SortOrder
  nickName: SortOrder
  password: SortOrder
  updatedAt: SortOrder
}

type UserMinAggregateOutputType {
  createdAt: DateTime
  disabled: Boolean
  id: String
  name: String
  nickName: String
  password: String
  updatedAt: DateTime
}

input UserMinOrderByAggregateInput {
  createdAt: SortOrder
  disabled: SortOrder
  id: SortOrder
  name: SortOrder
  nickName: SortOrder
  password: SortOrder
  updatedAt: SortOrder
}

input UserOrderByWithAggregationInput {
  _count: UserCountOrderByAggregateInput
  _max: UserMaxOrderByAggregateInput
  _min: UserMinOrderByAggregateInput
  createdAt: SortOrder
  disabled: SortOrder
  id: SortOrder
  name: SortOrder
  nickName: SortOrder
  password: SortOrder
  updatedAt: SortOrder
}

input UserOrderByWithRelationInput {
  createdAt: SortOrder
  disabled: SortOrder
  id: SortOrder
  name: SortOrder
  nickName: SortOrder
  password: SortOrder
  updatedAt: SortOrder
}

enum UserScalarFieldEnum {
  createdAt
  disabled
  id
  name
  nickName
  password
  updatedAt
}

input UserScalarWhereWithAggregatesInput {
  AND: [UserScalarWhereWithAggregatesInput]
  NOT: [UserScalarWhereWithAggregatesInput]
  OR: [UserScalarWhereWithAggregatesInput]
  createdAt: DateTimeWithAggregatesFilter
  disabled: BoolWithAggregatesFilter
  id: StringWithAggregatesFilter
  name: StringWithAggregatesFilter
  nickName: StringWithAggregatesFilter
  password: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input UserUncheckedCreateInput {
  createdAt: DateTime
  disabled: Boolean
  id: String
  name: String!
  nickName: String!
  password: String!
  updatedAt: DateTime
}

input UserUncheckedUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  disabled: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  nickName: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  disabled: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  nickName: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  disabled: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  nickName: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  disabled: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  nickName: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserWhereInput {
  AND: [UserWhereInput]
  NOT: [UserWhereInput]
  OR: [UserWhereInput]
  createdAt: DateTimeFilter
  disabled: BoolFilter
  id: StringFilter
  name: StringFilter
  nickName: StringFilter
  password: StringFilter
  updatedAt: DateTimeFilter
}

input UserWhereUniqueInput {
  id: String
  name: String
}